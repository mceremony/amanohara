{"version":3,"file":"jquery.matchHeight.min.js","sources":["vendor/jquery.matchHeight.js"],"sourcesContent":["/**\n* jquery-match-height 0.7.2 by @liabru\n* http://brm.io/jquery-match-height/\n* License: MIT\n*/\n\n;(function(factory) { // eslint-disable-line no-extra-semi\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        // CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Global\n        factory(jQuery);\n    }\n})(function($) {\n    /*\n    *  internal\n    */\n\n    var _previousResizeWidth = -1,\n        _updateTimeout = -1;\n\n    /*\n    *  _parse\n    *  value parse utility function\n    */\n\n    var _parse = function(value) {\n        // parse value and convert NaN to 0\n        return parseFloat(value) || 0;\n    };\n\n    /*\n    *  _rows\n    *  utility function returns array of jQuery selections representing each row\n    *  (as displayed after float wrapping applied by browser)\n    */\n\n    var _rows = function(elements) {\n        var tolerance = 1,\n            $elements = $(elements),\n            lastTop = null,\n            rows = [];\n\n        // group elements by their top position\n        $elements.each(function(){\n            var $that = $(this),\n                top = $that.offset().top - _parse($that.css('margin-top')),\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\n\n            if (lastRow === null) {\n                // first item on the row, so just push it\n                rows.push($that);\n            } else {\n                // if the row top is the same, add to the row group\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\n                    rows[rows.length - 1] = lastRow.add($that);\n                } else {\n                    // otherwise start a new row group\n                    rows.push($that);\n                }\n            }\n\n            // keep track of the last row top\n            lastTop = top;\n        });\n\n        return rows;\n    };\n\n    /*\n    *  _parseOptions\n    *  handle plugin options\n    */\n\n    var _parseOptions = function(options) {\n        var opts = {\n            byRow: true,\n            property: 'height',\n            target: null,\n            remove: false\n        };\n\n        if (typeof options === 'object') {\n            return $.extend(opts, options);\n        }\n\n        if (typeof options === 'boolean') {\n            opts.byRow = options;\n        } else if (options === 'remove') {\n            opts.remove = true;\n        }\n\n        return opts;\n    };\n\n    /*\n    *  matchHeight\n    *  plugin definition\n    */\n\n    var matchHeight = $.fn.matchHeight = function(options) {\n        var opts = _parseOptions(options);\n\n        // handle remove\n        if (opts.remove) {\n            var that = this;\n\n            // remove fixed height from all selected elements\n            this.css(opts.property, '');\n\n            // remove selected elements from all groups\n            $.each(matchHeight._groups, function(key, group) {\n                group.elements = group.elements.not(that);\n            });\n\n            // TODO: cleanup empty groups\n\n            return this;\n        }\n\n        if (this.length <= 1 && !opts.target) {\n            return this;\n        }\n\n        // keep track of this group so we can re-apply later on load and resize events\n        matchHeight._groups.push({\n            elements: this,\n            options: opts\n        });\n\n        // match each element's height to the tallest element in the selection\n        matchHeight._apply(this, opts);\n\n        return this;\n    };\n\n    /*\n    *  plugin global options\n    */\n\n    matchHeight.version = '0.7.2';\n    matchHeight._groups = [];\n    matchHeight._throttle = 80;\n    matchHeight._maintainScroll = false;\n    matchHeight._beforeUpdate = null;\n    matchHeight._afterUpdate = null;\n    matchHeight._rows = _rows;\n    matchHeight._parse = _parse;\n    matchHeight._parseOptions = _parseOptions;\n\n    /*\n    *  matchHeight._apply\n    *  apply matchHeight to given elements\n    */\n\n    matchHeight._apply = function(elements, options) {\n        var opts = _parseOptions(options),\n            $elements = $(elements),\n            rows = [$elements];\n\n        // take note of scroll position\n        var scrollTop = $(window).scrollTop(),\n            htmlHeight = $('html').outerHeight(true);\n\n        // get hidden parents\n        var $hiddenParents = $elements.parents().filter(':hidden');\n\n        // cache the original inline style\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.data('style-cache', $that.attr('style'));\n        });\n\n        // temporarily must force hidden parents visible\n        $hiddenParents.css('display', 'block');\n\n        // get rows if using byRow, otherwise assume one row\n        if (opts.byRow && !opts.target) {\n\n            // must first force an arbitrary equal height so floating elements break evenly\n            $elements.each(function() {\n                var $that = $(this),\n                    display = $that.css('display');\n\n                // temporarily force a usable display value\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                    display = 'block';\n                }\n\n                // cache the original inline style\n                $that.data('style-cache', $that.attr('style'));\n\n                $that.css({\n                    'display': display,\n                    'padding-top': '0',\n                    'padding-bottom': '0',\n                    'margin-top': '0',\n                    'margin-bottom': '0',\n                    'border-top-width': '0',\n                    'border-bottom-width': '0',\n                    'height': '100px',\n                    'overflow': 'hidden'\n                });\n            });\n\n            // get the array of rows (based on element top position)\n            rows = _rows($elements);\n\n            // revert original inline styles\n            $elements.each(function() {\n                var $that = $(this);\n                $that.attr('style', $that.data('style-cache') || '');\n            });\n        }\n\n        $.each(rows, function(key, row) {\n            var $row = $(row),\n                targetHeight = 0;\n\n            if (!opts.target) {\n                // skip apply to rows with only one item\n                if (opts.byRow && $row.length <= 1) {\n                    $row.css(opts.property, '');\n                    return;\n                }\n\n                // iterate the row and find the max height\n                $row.each(function(){\n                    var $that = $(this),\n                        style = $that.attr('style'),\n                        display = $that.css('display');\n\n                    // temporarily force a usable display value\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                        display = 'block';\n                    }\n\n                    // ensure we get the correct actual height (and not a previously set height value)\n                    var css = { 'display': display };\n                    css[opts.property] = '';\n                    $that.css(css);\n\n                    // find the max height (including padding, but not margin)\n                    if ($that.outerHeight(false) > targetHeight) {\n                        targetHeight = $that.outerHeight(false);\n                    }\n\n                    // revert styles\n                    if (style) {\n                        $that.attr('style', style);\n                    } else {\n                        $that.css('display', '');\n                    }\n                });\n            } else {\n                // if target set, use the height of the target element\n                targetHeight = opts.target.outerHeight(false);\n            }\n\n            // iterate the row and apply the height to all elements\n            $row.each(function(){\n                var $that = $(this),\n                    verticalPadding = 0;\n\n                // don't apply to a target\n                if (opts.target && $that.is(opts.target)) {\n                    return;\n                }\n\n                // handle padding and border correctly (required when not using border-box)\n                if ($that.css('box-sizing') !== 'border-box') {\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\n                }\n\n                // set the height (accounting for padding and border)\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\n            });\n        });\n\n        // revert hidden parents\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.attr('style', $that.data('style-cache') || null);\n        });\n\n        // restore scroll position if enabled\n        if (matchHeight._maintainScroll) {\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\n        }\n\n        return this;\n    };\n\n    /*\n    *  matchHeight._applyDataApi\n    *  applies matchHeight to all elements with a data-match-height attribute\n    */\n\n    matchHeight._applyDataApi = function() {\n        var groups = {};\n\n        // generate groups by their groupId set by elements using data-match-height\n        $('[data-match-height], [data-mh]').each(function() {\n            var $this = $(this),\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\n\n            if (groupId in groups) {\n                groups[groupId] = groups[groupId].add($this);\n            } else {\n                groups[groupId] = $this;\n            }\n        });\n\n        // apply matchHeight to each group\n        $.each(groups, function() {\n            this.matchHeight(true);\n        });\n    };\n\n    /*\n    *  matchHeight._update\n    *  updates matchHeight on all current groups with their correct options\n    */\n\n    var _update = function(event) {\n        if (matchHeight._beforeUpdate) {\n            matchHeight._beforeUpdate(event, matchHeight._groups);\n        }\n\n        $.each(matchHeight._groups, function() {\n            matchHeight._apply(this.elements, this.options);\n        });\n\n        if (matchHeight._afterUpdate) {\n            matchHeight._afterUpdate(event, matchHeight._groups);\n        }\n    };\n\n    matchHeight._update = function(throttle, event) {\n        // prevent update if fired from a resize event\n        // where the viewport width hasn't actually changed\n        // fixes an event looping bug in IE8\n        if (event && event.type === 'resize') {\n            var windowWidth = $(window).width();\n            if (windowWidth === _previousResizeWidth) {\n                return;\n            }\n            _previousResizeWidth = windowWidth;\n        }\n\n        // throttle updates\n        if (!throttle) {\n            _update(event);\n        } else if (_updateTimeout === -1) {\n            _updateTimeout = setTimeout(function() {\n                _update(event);\n                _updateTimeout = -1;\n            }, matchHeight._throttle);\n        }\n    };\n\n    /*\n    *  bind events\n    */\n\n    // apply on DOM ready event\n    $(matchHeight._applyDataApi);\n\n    // use on or bind where supported\n    var on = $.fn.on ? 'on' : 'bind';\n\n    // update heights on load and resize events\n    $(window)[on]('load', function(event) {\n        matchHeight._update(false, event);\n    });\n\n    // throttled update heights on resize events\n    $(window)[on]('resize orientationchange', function(event) {\n        matchHeight._update(true, event);\n    });\n\n});\n"],"names":["factory","define","amd","module","exports","require","jQuery","$","_parse","value","parseFloat","_rows","elements","$elements","lastTop","rows","each","$that","this","top","offset","css","lastRow","length","Math","floor","abs","add","push","_parseOptions","options","opts","byRow","property","target","remove","extend","_previousResizeWidth","_updateTimeout","matchHeight","fn","that","_groups","key","group","not","_apply","version","_throttle","_maintainScroll","_beforeUpdate","_afterUpdate","scrollTop","window","htmlHeight","outerHeight","$hiddenParents","parents","filter","data","attr","display","padding-top","padding-bottom","margin-top","margin-bottom","border-top-width","border-bottom-width","height","overflow","row","$row","targetHeight","style","verticalPadding","is","_applyDataApi","groups","$this","groupId","_update","event","throttle","type","windowWidth","width","setTimeout","on"],"mappings":"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"}